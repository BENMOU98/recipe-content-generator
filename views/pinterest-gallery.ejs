<!-- Pinterest Images Gallery -->
<div class="container-fluid mt-4">
  <div class="card shadow">
    <div class="card-header bg-pinterest text-white">
      <div class="d-flex justify-content-between align-items-center">
        <h3 class="mb-0">
          <i class="fab fa-pinterest me-2"></i>Pinterest Images Gallery
        </h3>
        <div>
          <a href="/" class="btn btn-outline-light me-2">
            <i class="bi bi-house"></i> Dashboard
          </a>
          <button id="refreshGallery" class="btn btn-light">
            <i class="bi bi-arrow-clockwise"></i> Refresh
          </button>
        </div>
      </div>
    </div>
    
    <div class="card-body">
      <!-- Stats Cards -->
      <div class="row mb-4" id="statsCards">
        <div class="col-md-3">
          <div class="card bg-primary text-white">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-images fa-2x me-3"></i>
                <div>
                  <h4 class="mb-0" id="totalImages">-</h4>
                  <small>Total Images</small>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-success text-white">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-calendar-week fa-2x me-3"></i>
                <div>
                  <h4 class="mb-0" id="thisWeek">-</h4>
                  <small>This Week</small>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-info text-white">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-calendar-alt fa-2x me-3"></i>
                <div>
                  <h4 class="mb-0" id="thisMonth">-</h4>
                  <small>This Month</small>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-3">
          <div class="card bg-warning text-dark">
            <div class="card-body">
              <div class="d-flex align-items-center">
                <i class="fas fa-chart-line fa-2x me-3"></i>
                <div>
                  <h4 class="mb-0" id="avgPerDay">-</h4>
                  <small>Avg per Day</small>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Filter and Sort Controls -->
      <div class="row mb-4">
        <div class="col-md-6">
          <div class="input-group">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
            <input type="text" id="searchFilter" class="form-control" placeholder="Search by recipe name...">
          </div>
        </div>
        <div class="col-md-3">
          <select id="sortBy" class="form-select">
            <option value="created_at">Sort by Date (Newest)</option>
            <option value="created_at_asc">Sort by Date (Oldest)</option>
            <option value="keyword">Sort by Recipe Name</option>
          </select>
        </div>
        <div class="col-md-3">
          <button id="downloadAll" class="btn btn-success w-100">
            <i class="bi bi-download"></i> Bulk Download
          </button>
        </div>
      </div>

      <!-- Loading State -->
      <div id="loadingState" class="text-center py-5">
        <div class="spinner-border text-pinterest" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading Pinterest images...</p>
      </div>

      <!-- Pinterest Images Grid -->
      <div id="pinterestGrid" class="row" style="display: none;">
        <!-- Images will be loaded here -->
      </div>

      <!-- Empty State -->
      <div id="emptyState" class="text-center py-5" style="display: none;">
        <i class="fab fa-pinterest fa-5x text-muted mb-3"></i>
        <h4 class="text-muted">No Pinterest Images Yet</h4>
        <p class="text-muted">Generate some Pinterest images from your recipes to see them here.</p>
        <a href="/recipes" class="btn btn-pinterest">
          <i class="bi bi-plus-lg"></i> Generate Pinterest Images
        </a>
      </div>

      <!-- Pagination -->
      <div id="pagination" class="d-flex justify-content-center mt-4" style="display: none;">
        <nav>
          <ul class="pagination">
            <li class="page-item" id="prevPage">
              <a class="page-link" href="#" onclick="loadPage(currentPage - 1)">Previous</a>
            </li>
            <li class="page-item active" id="currentPageItem">
              <a class="page-link" href="#" id="currentPageLink">1</a>
            </li>
            <li class="page-item" id="nextPage">
              <a class="page-link" href="#" onclick="loadPage(currentPage + 1)">Next</a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content bg-dark">
      <div class="modal-header border-secondary">
        <h5 class="modal-title text-light">Confirm Delete</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <p class="text-light">Are you sure you want to delete this Pinterest image?</p>
        <div id="imagePreview" class="text-center"></div>
      </div>
      <div class="modal-footer border-secondary">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" id="confirmDelete" class="btn btn-danger">Delete Image</button>
      </div>
    </div>
  </div>
</div>

<style>
.pinterest-card {
  transition: all 0.3s ease;
  border: 1px solid #e3e6f0;
  border-radius: 15px;
  overflow: hidden;
}

.pinterest-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px rgba(230, 0, 35, 0.15);
  border-color: #e60023;
}

.pinterest-image {
  aspect-ratio: 561/1120;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.pinterest-card:hover .pinterest-image {
  transform: scale(1.05);
}

.pinterest-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: linear-gradient(transparent, rgba(0,0,0,0.8));
  color: white;
  padding: 15px;
  transform: translateY(100%);
  transition: transform 0.3s ease;
}

.pinterest-card:hover .pinterest-overlay {
  transform: translateY(0);
}

.action-buttons .btn {
  margin: 0 2px;
}

.bg-pinterest {
  background: linear-gradient(135deg, #e60023, #bd001c);
}

.text-pinterest {
  color: #e60023;
}

.spinner-border.text-pinterest {
  color: #e60023;
}
</style>

<script>
let currentPage = 1;
let currentSearch = '';
let currentSort = 'created_at';
let deleteImageId = null;

document.addEventListener('DOMContentLoaded', function() {
  // Load initial data
  loadPinterestGallery();
  
  // Event listeners
  document.getElementById('refreshGallery').addEventListener('click', loadPinterestGallery);
  
  document.getElementById('searchFilter').addEventListener('input', function() {
    currentSearch = this.value;
    currentPage = 1;
    loadPinterestGallery();
  });
  
  document.getElementById('sortBy').addEventListener('change', function() {
    currentSort = this.value;
    currentPage = 1;
    loadPinterestGallery();
  });
  
  document.getElementById('confirmDelete').addEventListener('click', async function() {
    if (deleteImageId) {
      await deleteImage(deleteImageId);
      bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
    }
  });
});

async function loadPinterestGallery() {
  showLoading();
  
  try {
    const params = new URLSearchParams({
      limit: 12,
      offset: (currentPage - 1) * 12
    });
    
    const response = await fetch(`/api/pinterest/images?${params}`);
    const result = await response.json();
    
    if (result.success) {
      displayStats(result.stats);
      displayImages(result.pinterestImages);
      updatePagination(result.pinterestImages.length === 12);
    } else {
      showError('Failed to load Pinterest images: ' + result.message);
    }
  } catch (error) {
    showError('Error loading Pinterest images: ' + error.message);
  }
}

function displayStats(stats) {
  document.getElementById('totalImages').textContent = stats.total || 0;
  document.getElementById('thisWeek').textContent = stats.thisWeek || 0;
  document.getElementById('thisMonth').textContent = stats.thisMonth || 0;
  document.getElementById('avgPerDay').textContent = stats.averagePerDay || 0;
}

function displayImages(images) {
  const grid = document.getElementById('pinterestGrid');
  const emptyState = document.getElementById('emptyState');
  const loadingState = document.getElementById('loadingState');
  
  loadingState.style.display = 'none';
  
  if (!images || images.length === 0) {
    grid.style.display = 'none';
    emptyState.style.display = 'block';
    return;
  }
  
  emptyState.style.display = 'none';
  grid.style.display = 'flex';
  
  let filteredImages = images;
  
  // Apply search filter
  if (currentSearch) {
    filteredImages = images.filter(img => 
      img.keyword.toLowerCase().includes(currentSearch.toLowerCase())
    );
  }
  
  // Apply sorting
  filteredImages.sort((a, b) => {
    switch (currentSort) {
      case 'created_at':
        return new Date(b.created_at) - new Date(a.created_at);
      case 'created_at_asc':
        return new Date(a.created_at) - new Date(b.created_at);
      case 'keyword':
        return a.keyword.localeCompare(b.keyword);
      default:
        return 0;
    }
  });
  
  const imagesHtml = filteredImages.map(image => `
    <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
      <div class="card pinterest-card h-100">
        <div class="position-relative overflow-hidden">
          <img src="${image.image_url}" 
               class="card-img-top pinterest-image" 
               alt="Pinterest Image - ${image.keyword}"
               loading="lazy">
          <div class="pinterest-overlay">
            <h6 class="mb-1 fw-bold">${image.keyword}</h6>
            <small class="opacity-75">"${image.text_overlay}"</small>
          </div>
        </div>
        <div class="card-body">
          <h6 class="card-title text-truncate">${image.keyword}</h6>
          <p class="card-text">
            <small class="text-muted">
              <i class="bi bi-calendar"></i> ${new Date(image.created_at).toLocaleDateString()}
            </small>
          </p>
          <div class="action-buttons d-flex gap-1 flex-wrap">
            <a href="${image.image_url}" target="_blank" class="btn btn-sm btn-outline-primary">
              <i class="bi bi-eye"></i>
            </a>
            <a href="${image.image_url}" download="${image.filename}" class="btn btn-sm btn-outline-success">
              <i class="bi bi-download"></i>
            </a>
            <button onclick="openDeleteModal('${image.id}', '${image.keyword}', '${image.image_url}')" 
                    class="btn btn-sm btn-outline-danger">
              <i class="bi bi-trash"></i>
            </button>
            <button onclick="copyImageUrl('${image.image_url}')" class="btn btn-sm btn-outline-info">
              <i class="bi bi-clipboard"></i>
            </button>
          </div>
        </div>
        <div class="card-footer text-center">
          <small class="text-muted">
            ${image.width} × ${image.height}px
          </small>
        </div>
      </div>
    </div>
  `).join('');
  
  grid.innerHTML = imagesHtml;
}

function showLoading() {
  document.getElementById('loadingState').style.display = 'block';
  document.getElementById('pinterestGrid').style.display = 'none';
  document.getElementById('emptyState').style.display = 'none';
}

function showError(message) {
  document.getElementById('loadingState').style.display = 'none';
  alert('Error: ' + message);
}

function updatePagination(hasMore) {
  const pagination = document.getElementById('pagination');
  const prevPage = document.getElementById('prevPage');
  const nextPage = document.getElementById('nextPage');
  const currentPageLink = document.getElementById('currentPageLink');
  
  currentPageLink.textContent = currentPage;
  
  prevPage.classList.toggle('disabled', currentPage === 1);
  nextPage.classList.toggle('disabled', !hasMore);
  
  pagination.style.display = currentPage > 1 || hasMore ? 'block' : 'none';
}

function loadPage(page) {
  if (page < 1) return;
  currentPage = page;
  loadPinterestGallery();
}

function openDeleteModal(imageId, keyword, imageUrl) {
  deleteImageId = imageId;
  document.getElementById('imagePreview').innerHTML = `
    <div class="text-center">
      <img src="${imageUrl}" class="img-thumbnail" style="max-width: 200px; max-height: 300px;">
      <p class="mt-2 text-light"><strong>${keyword}</strong></p>
    </div>
  `;
  new bootstrap.Modal(document.getElementById('deleteModal')).show();
}

async function deleteImage(imageId) {
  try {
    const response = await fetch(`/api/pinterest/images/${imageId}`, {
      method: 'DELETE'
    });
    
    const result = await response.json();
    
    if (result.success) {
      showSuccess('Pinterest image deleted successfully!');
      loadPinterestGallery(); // Refresh the gallery
    } else {
      showError('Failed to delete image: ' + result.message);
    }
  } catch (error) {
    showError('Error deleting image: ' + error.message);
  }
}

function copyImageUrl(imageUrl) {
  const fullUrl = window.location.origin + imageUrl;
  navigator.clipboard.writeText(fullUrl).then(() => {
    showSuccess('Image URL copied to clipboard!');
  }).catch(() => {
    // Fallback for older browsers
    const textArea = document.createElement('textarea');
    textArea.value = fullUrl;
    document.body.appendChild(textArea);
    textArea.select();
    document.execCommand('copy');
    document.body.removeChild(textArea);
    showSuccess('Image URL copied to clipboard!');
  });
}

function showSuccess(message) {
  // Simple toast notification
  const toast = document.createElement('div');
  toast.className = 'position-fixed top-0 end-0 m-3 alert alert-success';
  toast.style.zIndex = '9999';
  toast.innerHTML = `
    <i class="bi bi-check-circle me-2"></i>${message}
    <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
  `;
  document.body.appendChild(toast);
  
  setTimeout(() => {
    if (toast.parentElement) {
      toast.remove();
    }
  }, 3000);
}
</script>